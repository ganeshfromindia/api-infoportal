{"version":3,"sources":["shared/components/UIElements/Card.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/Button.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/context/auth-context.js","shared/hooks/auth-hook.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","products/item/Product.js","products/list/ProductsList.js","App.js","index.js"],"names":["Card","props","React","createElement","className","concat","style","children","VALIDATOR_MINLENGTH","val","type","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","Button","href","size","inverse","danger","to","Link","exact","normal","buttonfont","maxwidth","onClick","disabled","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","error","LoadingSpinner","asOverlay","ImageUpload","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","pickImageHandler","current","click","data","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","includes","blob","json","filter","reqCtrl","ok","Error","message","err","forEach","abortCtrl","abort","clearError","AuthContext","createContext","isLoggedIn","userId","userName","token","login","logout","logoutTimer","useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","setUserName","uid","username","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","Auth","auth","useContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","onSubmit","preventDefault","name","formData","FormData","append","image","switchModeHandler","prevMode","MainHeader","NavLinks","NavLink","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","openDrawerHandler","Product","_ref","productdata","handleClose","pharmacopoeiaData","setPharmacopoeiaData","dmfData","setDMFData","title","description","price","coa","msds","cep","qos","dmf","impurities","refStandards","pharmacopoeias","animatedComponents","makeAnimated","handleDownloadButtonClick","userData","fileWithPath","Authorization","responseType","then","res","Blob","catch","console","log","currentFilename","split","pop","addEventListener","blobString","link","setAttribute","appendChild","e","Select","defaultValue","closeMenuOnSelect","components","isMulti","options","selectedLabel","formatOptionLabel","option","_ref2","context","ProductsList","renderAfterCalled","columns","useMemo","selector","row","serialNo","width","cell","handleEditButtonClick","ignoreRowClick","allowOverflow","button","handleDeleteButtonClick","sortable","right","dmfHTML","map","index","key","role","aria-label","open","setOpen","loadedProducts","setLoadedProducts","productData","setProductData","loading","setLoading","totalRows","setTotalRows","perPage","setPerPage","selectedRows","setSelectedRows","handleChange","fetchProducts","page","products","total","handleOpen","product","subHeaderComponent","$event","address","DataTable","progressPending","pagination","paginationServer","paginationTotalRows","onChangeRowsPerPage","newPerPage","onChangePage","onSelectedRowsChange","subHeader","App","routes","Switch","Route","path","Redirect","Provider","Router","render"],"mappings":"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","file":"static/js/main.0422fdec.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n \n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n  \n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  useEffect(() => {\n    if(props.initialValue) {\n      onInput(props.id, props.initialValue, true)\n    }\n  },[props.id, props.initialValue, onInput])\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n    \n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'} ${props.normal} ${props.buttonfont} ${props.maxwidth}` }\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal modal-container ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      {/* <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      > */}\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      {/* </form> */}\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg,.pdf\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an file.</p>}\n        </div>\n        <Button type=\"button\" normal=\"normal-button\" buttonfont=\"button-font\" maxwidth=\"max-width-fit-cont\" onClick={pickImageHandler}>\n          Pick File\n        </Button>\n      </div>\n      { (!isValid && props.data == null) && (<p>{props.errorText}</p>)\n      }\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n        let responseData\n        if(url.includes('download')) {\n          responseData = response.blob();\n        } else {\n          responseData = await response.json();\n        }\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  userName: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const [userName, setUserName] = useState(false);\n\n  const login = useCallback((uid, token, username, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    setUserName(username);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        userName:username,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    setUserName(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, storedData.userName, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId, userName };\n};","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\nimport { useAuth } from '../../shared/hooks/auth-hook';\n\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          'https://api-infoportal.adaptable.app/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token, responseData.name);\n        useAuth.login(responseData.userId, responseData.token, responseData.name);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('folder', formState.inputs.name.value + '/Users/' + formState.inputs.name.value)\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          'https://api-infoportal.adaptable.app/api/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token, responseData.name);\n        useAuth.login(responseData.userId, responseData.token, responseData.name);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n  return (\n    <ul className=\"nav-links\">\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/products`}><button type=\"button\" className=\"button button--default button--inverse\"  >Products</button></NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/traders\"><button type=\"button\" className=\"button button--default button--inverse\">Traders</button></NavLink>\n        </li>\n      )}\n      {/* {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )} */}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout} className=\"button button--default button--inverse\">Logout</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          {/* <Link to=\"/\">YourPlaces</Link> */}\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","\r\nimport React, { useCallback, useContext, useState } from 'react';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './Product.css';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nconst Product = ({productdata, handleClose}) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [pharmacopoeiaData, setPharmacopoeiaData] = useState([])\r\n  const [dmfData, setDMFData] = useState([])\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      price: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: true\r\n      },\r\n      coa: {\r\n        value: null,\r\n        isValid: true\r\n      },\r\n      msds: {\r\n        value: null,\r\n        isValid: true\r\n      },\r\n      cep: {\r\n        value: null,\r\n        isValid: true\r\n      },\r\n      qos: {\r\n        value: null,\r\n        isValid: true\r\n      },\r\n      dmf: {\r\n        value: null,\r\n        isValid: true\r\n      },\r\n      impurities: {\r\n        value: null,\r\n        isValid: true\r\n      },\r\n      refStandards: {\r\n        value: null,\r\n        isValid: true\r\n      },\r\n      pharmacopoeias: {\r\n        value: null,\r\n        isValid: true\r\n      }\r\n    }\r\n  );\r\n  \r\n  \r\n \r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    // let userData = localStorage.getItem('userData')\r\n    // let userName = JSON.parse(userData).userName;\r\n    try {\r\n      \r\n      const formData = new FormData();\r\n      formData.append('folder', auth.userName + '/Products/' + formState.inputs.title.value)\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('price', formState.inputs.price.value);\r\n      formData.append('image', formState.inputs.image.value);\r\n      formData.append('coa', formState.inputs.coa.value);\r\n      formData.append('msds', formState.inputs.msds.value);\r\n      formData.append('cep', formState.inputs.cep.value);\r\n      formData.append('qos', formState.inputs.qos.value);\r\n      formData.append('dmf', JSON.stringify(dmfData));\r\n      formData.append('impurities', formState.inputs.impurities.value);\r\n      formData.append('refStandards', formState.inputs.refStandards.value);\r\n      formData.append('pharmacopoeias', JSON.stringify(pharmacopoeiaData));\r\n      await sendRequest('http://localhost:5000/api/products/create', 'POST', formData, {\r\n        Authorization: 'Bearer ' + auth.token\r\n      });\r\n      handleClose().click()\r\n    } catch (err) {}\r\n  };\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const optionsPharamacopoeia = [\r\n    { value: 'IP', label: 'Indian Pharmacopoeia', selectedLabel: 'IP' },\r\n    { value: 'BP', label: 'British Pharmacopoeia', selectedLabel: 'BP' },\r\n    { value: 'USP', label: 'US Pharmacopoeia', selectedLabel: 'USP' },\r\n    { value: 'JP', label: 'Japanese Pharmacopoeia', selectedLabel: 'JP' },\r\n    { value: 'EP', label: 'European Pharmacopoeia', selectedLabel: 'EP' },\r\n    { value: 'InHouse', label: 'In House', selectedLabel: 'In House' },\r\n  ]\r\n  \r\n  const optionsDMF = [\r\n    { value: 'USDMF', label: 'US DMF' },\r\n    { value: 'BRAZILDMF', label: 'Brazilian DMF' },\r\n    { value: 'KOREADMF', label: 'Korean DMF' },\r\n    { value: 'EUDMF', label: 'European DMF' },\r\n    { value: 'RUSSIANDMF', label: 'Russian DMF' },\r\n  ]\r\n\r\n  const handleMultiPharmacopoeiaSelect = (options) => {\r\n    setPharmacopoeiaData(options)\r\n  }\r\n  \r\n  const handleMultiDMFSelect = (options) => {\r\n    setDMFData(options)\r\n  }\r\n\r\n  const handleDownloadButtonClick = useCallback((event) => {\r\n    const fileReader = new FileReader();\r\n    let userData = localStorage.getItem('userData')\r\n    let fileWithPath = event.target.value;\r\n    sendRequest(`http://localhost:5000/api/download?file=${fileWithPath}`, 'GET', null, {\r\n    headers: {\r\n        Authorization: 'Bearer ' + JSON.parse(userData).token,\r\n        responseType: \"blob\",\r\n    },\r\n  })\r\n  .then((res) => {\r\n    fileReader.readAsDataURL(new Blob([res]));\r\n  })\r\n  .catch((err) => console.log(err));\r\n  let currentFilename = fileWithPath.split(\"/\").pop()\r\n  fileReader.addEventListener(\"loadend\", () => {\r\n    const blobString = fileReader.result;\r\n    const link = document.createElement(\"a\");\r\n    link.href = blobString;\r\n    link.setAttribute(\"download\", currentFilename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n      \r\n  },[sendRequest]);\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n          initialValue={productdata.title}          \r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n          initialValue={productdata.description}\r\n        />\r\n        <Input\r\n          id=\"price\"\r\n          element=\"input\"\r\n          label=\"price\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a price.\"\r\n          onInput={inputHandler}\r\n          initialValue={productdata.price}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an product image.\"\r\n          data={(productdata && productdata.image) || null}\r\n\r\n        />\r\n        {(productdata.image) ? (<button type=\"button\" value={productdata.image} onClick={(e) => handleDownloadButtonClick(e)}>Download Product Image</button>) : null }\r\n        <ImageUpload\r\n          id=\"coa\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide sample COA.\"\r\n          data={(productdata && productdata.coa) || null}\r\n        />\r\n         {(productdata.coa) ? (<button type=\"button\" value={productdata.coa} onClick={(e) => handleDownloadButtonClick(e)}>Download COA</button>) : null }\r\n        <ImageUpload\r\n          id=\"msds\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an MSDS.\"\r\n          data={(productdata && productdata.msds) || null}\r\n        />\r\n         {(productdata.msds) ? (<button type=\"button\" value={productdata.msds} onClick={(e) => handleDownloadButtonClick(e)}>Download MSDS</button>) : null }\r\n        <ImageUpload\r\n          id=\"cep\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide a Certificate of Suitability.\"\r\n          data={(productdata && productdata.cep) || null}\r\n        />\r\n         {(productdata.cep) ? (<button type=\"button\" value={productdata.cep} onClick={(e) => handleDownloadButtonClick(e)}>Download Certificate of Suitability</button>) : null }\r\n        <ImageUpload\r\n          id=\"qos\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an Quality Overall Summary.\"\r\n          data={(productdata && productdata.qos) || null}\r\n        />\r\n        {(productdata.qos) ? (<button type=\"button\" value={productdata.qos} onClick={(e) => handleDownloadButtonClick(e)}>Download Quality Overall Summary</button>) : null }\r\n        \r\n        <Input\r\n          id=\"impurities\"\r\n          element=\"textarea\"\r\n          label=\"Impurities\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter Impurities separated by comma.\"\r\n          onInput={inputHandler}\r\n          initialValue={productdata.impurities}\r\n        />\r\n        \r\n        <Input\r\n          id=\"refStandards\"\r\n          element=\"textarea\"\r\n          label=\"Reference Standards\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter Reference Standards separated by comma.\"\r\n          onInput={inputHandler}\r\n          initialValue={productdata.refStandards}\r\n        />\r\n        \r\n        <Select\r\n          defaultValue={productdata && productdata.pharmacopoeias && productdata.pharmacopoeias.length > 0 && [...JSON.parse(productdata.dmf)]}\r\n          closeMenuOnSelect={false}\r\n          components={animatedComponents}\r\n          isMulti\r\n          options={optionsDMF}\r\n          placeholder=\"Select DMF\"\r\n          onChange={handleMultiDMFSelect}\r\n        />\r\n        \r\n        <div className=\"height25\"></div>\r\n        <Select\r\n          defaultValue={productdata && productdata.pharmacopoeias && productdata.pharmacopoeias.length > 0 && [...JSON.parse(productdata.pharmacopoeias)]}\r\n          closeMenuOnSelect={false}\r\n          components={animatedComponents}\r\n          isMulti\r\n          options={optionsPharamacopoeia}\r\n          placeholder=\"Select Pharmacopoeia\"\r\n          onChange={handleMultiPharmacopoeiaSelect}\r\n          formatOptionLabel={(option, { context }) => {\r\n            /* context can be either `menu` or `value`\r\n               menu - dropdown\r\n               value - value displayed\r\n            */\r\n            return context === 'value' ? option.selectedLabel : option.label;\r\n          }}\r\n        />\r\n        <div className=\"height25\"></div>\r\n        <Button type=\"submit\" normal=\"normal-button\" buttonfont=\"button-font\" maxwidth=\"max-width-fit-cont\" disabled={!formState.isValid}>\r\n          ADD PRODUCT\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","\r\nimport React, { useMemo, useState, useCallback, useContext, useEffect, useRef } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport './ProductsList.css';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Product from '../item/Product';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nconst ProductsList = props => {\r\n    const { sendRequest } = useHttpClient();\r\n\r\n    const handleDownloadButtonClick = useCallback((data) => {\r\n        const fileReader = new FileReader();\r\n        let userData = localStorage.getItem('userData')\r\n\t\tlet fileWithPath = data.target.id;\r\n        sendRequest(`http://localhost:5000/api/download?file=${fileWithPath}`, 'GET', null, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + JSON.parse(userData).token,\r\n            responseType: \"blob\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        fileReader.readAsDataURL(new Blob([res]));\r\n      })\r\n      .catch((err) => console.log(err));\r\n    let currentFilename = fileWithPath.split(\"/\").pop()\r\n    fileReader.addEventListener(\"loadend\", () => {\r\n      const blobString = fileReader.result;\r\n      const link = document.createElement(\"a\");\r\n      link.href = blobString;\r\n      link.setAttribute(\"download\", currentFilename);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    });\r\n        \r\n\t},[sendRequest]);\r\n\r\n    const renderAfterCalled = useRef(false);\r\n    const columns = useMemo(\r\n\t\t() => [\r\n            {\r\n\t\t\t\tname: 'SN',\r\n\t\t\t\tselector: row => row.serialNo,\r\n                width: \"60px\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tcell: (row) => <button onClick={handleEditButtonClick} value={JSON.stringify(row)}>Edit</button>,\r\n\t\t\t\tignoreRowClick: true,\r\n\t\t\t\tallowOverflow: true,\r\n\t\t\t\tbutton: true,\r\n                width: \"100px\",\r\n                name: \"Action\"\r\n                \r\n\t\t\t},{\r\n\t\t\t\t\r\n\t\t\t\tcell: (row) => <button onClick={handleDeleteButtonClick} value={JSON.stringify(row)} >Delete</button>,\r\n\t\t\t\tignoreRowClick: true,\r\n\t\t\t\tallowOverflow: true,\r\n\t\t\t\tbutton: true,\r\n                width: \"100px\",\r\n                name: \"Action\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Product',\r\n\t\t\t\tselector: row => row.title,\r\n\t\t\t\tsortable: true,\r\n                right: true,\r\n                width: \"200px\",\r\n               \r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Description',\r\n\t\t\t\tselector: row => row.description,\r\n\t\t\t\tsortable: true,\r\n                right: true,\r\n                width: \"200px\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Price',\r\n\t\t\t\tselector: row => row.price,\r\n\t\t\t\tsortable: true,\r\n\t\t\t\tright: true,\r\n                width: \"100px\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'COA',\r\n\t\t\t\tcell: (row) => { if (row.coa) {\r\n                    return (<button onClick={handleDownloadButtonClick} value={JSON.stringify(row)} id={row.coa}> Download </button>)\r\n                } else { \r\n                    return (\"NA\")\r\n                }},\r\n\t\t\t\tignoreRowClick: true,\r\n\t\t\t\tallowOverflow: true,\r\n\t\t\t\tbutton: true,\r\n                width: \"100px\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'MSDS',\r\n\t\t\t\tcell: (row) => { if (row.msds) {\r\n                    return (<button onClick={handleDownloadButtonClick} value={JSON.stringify(row)} id={row.msds}> Download </button>)\r\n                } else { \r\n                    return (\"NA\")\r\n                }},\r\n                ignoreRowClick: true,\r\n                allowOverflow: true,\r\n                button: true,\r\n                width: \"100px\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'CEP',\r\n\t\t\t\tcell: (row) => { if (row.cep) {\r\n                    return (<button onClick={handleDownloadButtonClick} value={JSON.stringify(row)} id={row.cep}> Download </button>)\r\n                } else { \r\n                    return (\"NA\")\r\n                }},\r\n                ignoreRowClick: true,\r\n                allowOverflow: true,\r\n                button: true,\r\n                width: \"100px\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'QOS',\r\n\t\t\t\tcell: (row) => { if (row.qos) {\r\n                    return (<button onClick={handleDownloadButtonClick} value={JSON.stringify(row)} id={row.qos}> Download </button>)\r\n                } else { \r\n                    return (\"NA\")\r\n                }},\r\n                ignoreRowClick: true,\r\n                allowOverflow: true,\r\n                button: true,\r\n                width: \"100px\",\r\n\t\t\t},\r\n\t\t\t{\r\n                name: 'DMF',\r\n\t\t\t\tcell: (row) => { if (JSON.parse(JSON.stringify(row.dmf).length > 0)) {\r\n                    let dmfHTML = JSON.parse(row.dmf).map((data) => data.label);\r\n                    dmfHTML = dmfHTML.map((data, index) => (<div key={index}>{data}</div>))\r\n                    dmfHTML = (<div className=\"list-dmf-container scroller\">{dmfHTML}</div>)\r\n                    return dmfHTML;\r\n                } else { \r\n                    return (\"No\")\r\n                }},\r\n                ignoreRowClick: true,\r\n                allowOverflow: true,\r\n                button: true,\r\n                width: \"100px\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'IP',\r\n\t\t\t\tcell: (row) => { if (JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes('IP')) {\r\n                    return (<span className='check' role='img' aria-label='check'> &#10004; </span>)\r\n                } else { \r\n                    return (<span className='cross' role='img' aria-label='cross'> &#x274C; </span>)\r\n                }},\r\n                width: \"15px\",\r\n\t\t\t},\r\n            {\r\n\t\t\t\tname: 'BP',\r\n\t\t\t\tcell: (row) => { if (JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes('BP')) {\r\n                    return (<span className='check' role='img' aria-label='check'> &#10004; </span>)\r\n                } else { \r\n                    return (<span className='cross' role='img' aria-label='cross'> &#x274C; </span>)\r\n                }},\r\n                width: \"15px\",\r\n\t\t\t},\r\n            {\r\n\t\t\t\tname: 'EP',\r\n\t\t\t\tcell: (row) => { if (JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes('EP')) {\r\n                    return (<span className='check' role='img' aria-label='check'> &#10004; </span>)\r\n                } else { \r\n                    return (<span className='cross' role='img' aria-label='cross'> &#x274C; </span>)\r\n                }},\r\n                width: \"15px\",\r\n\t\t\t},\r\n            {\r\n\t\t\t\tname: 'JP',\r\n\t\t\t\tcell: (row) => { if (JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes('JP')) {\r\n                    return (<span className='check' role='img' aria-label='check'> &#10004; </span>)\r\n                } else { \r\n                    return (<span className='cross' role='img' aria-label='cross'> &#x274C; </span>)\r\n                }},\r\n                width: \"15px\",\r\n\t\t\t},\r\n            {\r\n\t\t\t\tname: 'USP',\r\n\t\t\t\tcell: (row) => { if (JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes('USP')) {\r\n                    return (<span className='check' role='img' aria-label='check'> &#10004; </span>)\r\n                } else { \r\n                    return (<span className='cross' role='img' aria-label='cross'> &#x274C; </span>)\r\n                }},\r\n                width: \"15px\",\r\n\t\t\t},\r\n            {\r\n\t\t\t\tname: 'In House',\r\n\t\t\t\tcell: (row) => { if (JSON.parse(JSON.stringify(row.pharmacopoeias[0])).includes('InHouse')) {\r\n                    return (<span className='check' role='img' aria-label='check'> &#10004; </span>)\r\n                } else { \r\n                    return (<span className='cross' role='img' aria-label='cross'> &#x274C; </span>)\r\n                }},\r\n                width: \"15px\",\r\n\t\t\t}\r\n\t\t],\r\n\t\t[handleDownloadButtonClick],\r\n\t);\r\n\r\n\r\n    \r\n    const auth = useContext(AuthContext);\r\n    const [open, setOpen] = useState(false)\r\n    const [loadedProducts, setLoadedProducts] = useState([]);\r\n    const [productData, setProductData] = useState();\r\n    \r\n\r\n\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalRows, setTotalRows] = useState(0);\r\n    const [perPage, setPerPage] = useState(10);\r\n\r\n\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t}, [selectedRows]);\r\n\r\n    \r\n\tconst handleEditButtonClick = (data) => {\r\n\t\tsetOpen(true)\r\n\t\tsetProductData(JSON.parse(data.target.value))\r\n\t};\r\n\tconst handleDeleteButtonClick = (data) => {\r\n        \r\n\t};\r\n\t\r\n\r\n\tconst handleChange = useCallback(state => {\r\n\t\tsetSelectedRows(state.selectedRows);\r\n\t}, []);\r\n    \r\n    const fetchProducts = useCallback(async (page) => {\r\n      setLoading(true);\r\n    //   let userData = localStorage.getItem('userData')\r\n    //   let userId = auth.userId\r\n    //   if(userData) {\r\n    //     let userId = JSON.parse(userData).userId;\r\n        try {\r\n                const response = await sendRequest(`http://localhost:5000/api/products/manufacturer/id?uid=${auth.userId}&page=${page}&size=${perPage}&delay=1`, 'GET', null,\r\n                    {\r\n                        // Authorization: 'Bearer ' + JSON.parse(userData).token\r\n                        Authorization: 'Bearer ' + auth.token\r\n                    }\r\n                    );\r\n                setLoadedProducts(response.products);\r\n                setTotalRows(response.total);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.log(err)\r\n            };\r\n    // }\r\n      \r\n    },[perPage, sendRequest, auth]);\r\n    const handlePageChange = page => {\r\n      fetchProducts(page);\r\n    };\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        let userData = localStorage.getItem('userData')\r\n        let userId = JSON.parse(userData).userId;\r\n      setLoading(true);\r\n      try {\r\n        const response = await sendRequest(`http://localhost:5000/api/products/manufacturer/id?uid=${userId}&page=${page}&size=${newPerPage}&delay=1`, 'GET', null,\r\n            {\r\n                Authorization: 'Bearer ' + JSON.parse(userData).token\r\n            }\r\n            );\r\n            setLoadedProducts(response.products);\r\n            setPerPage(newPerPage);\r\n            setLoading(false);\r\n        } catch (err) {};\r\n      \r\n    };\r\n    useEffect(() => {\r\n        if(!renderAfterCalled.current) {\r\n            fetchProducts(1);\r\n        }\r\n        renderAfterCalled.current = true;\r\n    }, [fetchProducts]);\r\n\r\n    useEffect(() => {\r\n            if(!open) {\r\n                fetchProducts(1);\r\n            }\r\n        \r\n    }, [open, fetchProducts]);\r\n\r\n\r\n\r\n    const handleOpen = (product, e) => {\r\n        e.preventDefault();\r\n        setProductData(product)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = ()=> {\r\n        setOpen(false)\r\n    }\r\n    const subHeader = false;\r\n    \r\n    const subHeaderComponent =  <div><div className=\"sub-header\">.</div><div className=\"last-column\">Pharmacopoeias</div></div>\r\n    \r\n\r\n    \r\n    if (loadedProducts?.length === 0) {\r\n        return (\r\n        <div className=\"place-list center\">\r\n            <Card className=\"card-product\">\r\n                <h2>No products found</h2>\r\n                <Button type=\"button\" onClick={($event) => handleOpen([], $event)} normal=\"normal-button\" buttonfont=\"button-font\" maxwidth=\"max-width-fit-cont\">Add Product</Button>\r\n                <Modal\r\n                    show={open}\r\n                    onCancel={handleClose}\r\n                    header={props.address}\r\n                    contentClass=\"place-item__modal-content\"\r\n                    footerClass=\"place-item__modal-actions\"\r\n                    footer={<Button type=\"button\" onClick={handleClose} normal=\"normal-button\" buttonfont=\"button-font\" maxwidth=\"max-width-fit-cont\">CLOSE</Button>}\r\n                >\r\n                    <div className=\"map-container\">\r\n                     <Product productdata={{}} handleClose={handleClose}></Product>\r\n                    </div>\r\n                </Modal>\r\n            </Card>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card className=\"card-product place-list center\">\r\n                    <Button type=\"button\" onClick={($event) => handleOpen([], $event)} normal=\"normal-button\" buttonfont=\"button-font\" maxwidth=\"max-width-fit-cont\">Add Product</Button>\r\n                    <Modal\r\n                        show={open}\r\n                        onCancel={handleClose}\r\n                        header={props.address}\r\n                        contentClass=\"place-item__modal-content\"\r\n                        footerClass=\"place-item__modal-actions\"\r\n                        footer={<Button type=\"button\" onClick={handleClose} normal=\"normal-button\" buttonfont=\"button-font\" maxwidth=\"max-width-fit-cont\">CLOSE</Button>}\r\n                    >\r\n                        <div className=\"map-container\">\r\n                        <Product productdata={{}} handleClose={handleClose}></Product>\r\n                        </div>\r\n                    </Modal>\r\n            </Card>\r\n            {\r\n                loadedProducts && (\r\n                        <DataTable\r\n                            // title=\"Products\" \r\n                            columns={columns} \r\n                            data={loadedProducts} \r\n                            progressPending={loading} \r\n                            pagination \r\n                            paginationServer \r\n                            // selectableRows\r\n                            paginationTotalRows={totalRows} \r\n                            onChangeRowsPerPage={handlePerRowsChange} \r\n                            onChangePage={handlePageChange}\r\n                            onSelectedRowsChange={handleChange}\r\n                            subHeaderComponent={subHeaderComponent}\r\n                            subHeader={subHeader}\r\n                            \r\n                        />\r\n                    )\r\n            },\r\n            \r\n            <Modal\r\n                show={open}\r\n                onCancel={handleClose}\r\n                header={productData && productData.title}\r\n                contentClass=\"place-item__modal-content\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={<Button type=\"button\" onClick={handleClose} normal=\"normal-button\" buttonfont=\"button-font\" maxwidth=\"max-width-fit-cont\">CLOSE</Button>}\r\n            >\r\n                <div className=\"map-container\">\r\n                <Product productdata={productData} handleClose={handleClose}></Product>\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProductsList;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport ProductsList from './products/list/ProductsList';\n\nconst App = () => {\n  const { token, login, logout, userId, userName } = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <ProductsList />\n        </Route>\n        <Route path=\"/traders\" exact>\n          <ProductsList />\n        </Route>\n        <Route path=\"/products\" exact>\n          <ProductsList />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Auth />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        userName: userName,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}